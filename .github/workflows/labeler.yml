name: "Auto Label PRs"

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  label:
    name: Auto Label
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auto Label PR
        uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/labeler.yml
          sync-labels: false

      - name: Add size labels
        uses: pascalgn/size-label-action@v0.5.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          sizes: >
            {
              "0": "XS",
              "20": "S", 
              "50": "M",
              "100": "L",
              "500": "XL"
            }

      - name: Add type labels based on branch name
        uses: actions/github-script@v7
        with:
          script: |
            const { context, github } = require('@actions/github');
            const branchName = context.payload.pull_request.head.ref;
            
            // Get existing labels in the repo
            const existingLabels = await github.rest.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const existingLabelNames = existingLabels.data.map(label => label.name);
            
            const labels = [];
            
            if (branchName.startsWith('feat/') || branchName.startsWith('feature/')) {
              if (existingLabelNames.includes('enhancement')) labels.push('enhancement');
            } else if (branchName.startsWith('fix/') || branchName.startsWith('bug/')) {
              if (existingLabelNames.includes('bug')) labels.push('bug');
            } else if (branchName.startsWith('docs/')) {
              if (existingLabelNames.includes('documentation')) labels.push('documentation');
            } else if (branchName.startsWith('refactor/')) {
              if (existingLabelNames.includes('refactor')) labels.push('refactor');
            } else if (branchName.startsWith('test/')) {
              if (existingLabelNames.includes('tests')) labels.push('tests');
            } else if (branchName.startsWith('ci/') || branchName.startsWith('build/')) {
              if (existingLabelNames.includes('ci/cd')) labels.push('ci/cd');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: labels
              });
            } 